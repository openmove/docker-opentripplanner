
## USAGE

./data contains gtfs files(stops.txt)

generate single bounding box with 5km of buffer around gtfs
```bash
$ node bbox.js ../data/
```
output:
```json
{
    "stops": 4669,
    "buffer": 5,
    "bboxes": [
        [
            10.045198235794025,
            46.04124495172635,
            12.81614276420598,
            47.29382838996485
        ]
    ],
    "overpass": "https://overpass-api.de/api/map?bbox=10.045198235794025,46.04124495172635,12.81614276420598,47.29382838996485",    
    "bboxfinder": "http://bboxfinder.com/#46.04124495172635,10.045198235794025,47.29382838996485,12.81614276420598"
}
```

getting only overpass url
```bash
$ node bbox.js ../data/ --overpass
```
output:
```text
https://overpass-api.de/api/map?bbox=10.045198235794025,46.04124495172635,12.81614276420598,47.29382838996485
```

## DOWNLOAD single file data

```bash
curl $(node bbox.js ../data/200804_ExportGTFS --overpass) -o ../data/data.osm
```

## DOWNLOAD using multiple bboxes

Useful when overpass response is too large bounding box or memory!
Generate a list of multiple sub bounding boxes, removing areas without gtfs
```bash
$ node bboxes.js ../data > ../data/osm.url
```



## Experimental

parallel download via nodejs/wget

```bash
$ node bboxes.js ../data | node fetch-osm-wget.js
```